/**
 *
 * $Id$
 */
package smart_office.validation;

import org.eclipse.emf.common.util.EList;

import smart_office.Agent;
import smart_office.Brightness;
import smart_office.Cleanness;
import smart_office.Door;
import smart_office.Heater;
import smart_office.Light;
import smart_office.Printer;
import smart_office.Roomba;
import smart_office.Secretary;
import smart_office.Server;
import smart_office.Temperature;
import smart_office.Window;

/**
 * A sample validator interface for {@link smart_office.Room}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface RoomValidator {
	boolean validate();

	boolean validateDoor(EList<Door> value);
	boolean validateWindow(Window value);
	boolean validateHeater(Heater value);
	boolean validateLight(Light value);
	boolean validateRoomba(EList<Roomba> value);
	boolean validateSecretary(EList<Secretary> value);
	boolean validateAgent(EList<Agent> value);
	boolean validatePrinter(EList<Printer> value);
	boolean validateServer(EList<Server> value);
	boolean validateBrightness(Brightness value);
	boolean validateCleanness(Cleanness value);
	boolean validateTemperature(Temperature value);
}
